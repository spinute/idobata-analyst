services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    command: mongod --auth
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=comment-system
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://localhost:27017 --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    depends_on:
      - mongodb

  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3001"
    env_file:
      - ./packages/backend/.env
    environment:
      - MONGODB_URI=mongodb://${MONGO_APP_USERNAME}:${MONGO_APP_PASSWORD}@mongodb:27017/comment-system?authSource=comment-system
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - SLACK_WEBHOOK_URL_LOGGING=${SLACK_WEBHOOK_URL_LOGGING}
      - PORT=3001
    depends_on:
      mongodb:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./packages/backend
          target: /app
          ignore:
            - node_modules
        - action: rebuild
          path: ./packages/backend/package.json
        - action: sync+restart
          path: ./packages/backend/src
          target: /app/src

  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true
    develop:
      watch:
        - action: sync
          path: ./packages/frontend
          target: /app
          ignore:
            - node_modules
        - action: rebuild
          path: ./packages/frontend/package.json

  chat-bot:
    build:
      context: ./packages/chat-bot
      dockerfile: Dockerfile.dev
    ports:
      - "3030:3030"
    environment:
      - PORT=3030
      - BACKEND_API_URL=http://backend:3001/api
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - SLACK_WEBHOOK_URL_LOGGING=${SLACK_WEBHOOK_URL_LOGGING}
      - ADMIN_API_KEY=${ADMIN_API_KEY}
    depends_on:
      - backend
    develop:
      watch:
        - action: sync
          path: ./packages/chat-bot
          target: /app
          ignore:
            - node_modules
        - action: rebuild
          path: ./packages/chat-bot/package.json

volumes:
  mongodb_data:
